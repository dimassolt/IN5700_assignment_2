//
// Generated file, do not edit! Created by opp_msgtool 6.2 from fog/messages.msg.
//

#ifndef __FOG_MESSAGES_M_H
#define __FOG_MESSAGES_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0602
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif


namespace fog {

class AppPacket;

}  // namespace fog


namespace fog {

/**
 * Class generated from <tt>fog/messages.msg:4</tt> by opp_msgtool.
 * <pre>
 * message AppPacket
 * {
 *     int type = 0;  // 1=HELLO, 2=ACK, 3=TEST
 *     int seq = 0;   // attempt counter for TEST
 * }
 * </pre>
 */
class AppPacket : public ::omnetpp::cMessage
{
  protected:
    int type = 0;
    int seq = 0;

  private:
    void copy(const AppPacket& other);

  protected:
    bool operator==(const AppPacket&) = delete;

  public:
    AppPacket(const char *name=nullptr, short kind=0);
    AppPacket(const AppPacket& other);
    virtual ~AppPacket();
    AppPacket& operator=(const AppPacket& other);
    virtual AppPacket *dup() const override {return new AppPacket(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual int getType() const;
    virtual void setType(int type);

    virtual int getSeq() const;
    virtual void setSeq(int seq);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const AppPacket& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, AppPacket& obj) {obj.parsimUnpack(b);}


}  // namespace fog


namespace omnetpp {

template<> inline fog::AppPacket *fromAnyPtr(any_ptr ptr) { return check_and_cast<fog::AppPacket*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __FOG_MESSAGES_M_H

